<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAkREREPDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8P
        DxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PERER
        EQ8AAAAJAAAAAgAAAAAAAAAAAAAAAAAAAAQTExMaHFEcZBpWHIUbUx2KG1MdihtTHYobUx2KG1MdikdH
        R4hHR0eIR0dHiEdHR4hHR0eIR0dHiEdHR4hHR0eIR0dHiEdHR4hHR0eIR0dHiEdHR4hHR0eIR0dHiEdH
        R4hHR0eISEhIgkZGRmITExMaAAAABAAAAAAAAAAAAAAAAB1tIEYkoDf/I6c6/ySoOv8kqDr/JKg6/yOn
        Ov8kmDP/19fX/9TU1P/U1NT/1NTU/9XV1f/V1dX/1dXV/9XV1f/V1dX/1NTU/9TU1P/T09P/09PT/9LS
        0v/R0dH/0NDQ/8/Pz//Ozs7/v7+//l1dXUQAAAAAAAAAAAAAAAAAAAAAHHYfWCCoOP8dpzb/Hag3/x2o
        N/8dqDf/Hac2/x+ZMf/W1tb/1NTU/9fX1//X19f/19fX/9fX1//X19f/19fX/9fX1//X19f/1tbW/9bW
        1v/V1dX/1NTU/9PT0//T09P/0tLS/87Ozv/Nzc3/ZmZmVQAAAAAAAAAAAAAAAAAAAAAceSJYIqs8/x6r
        Ov8frDv/H6w7/x+sO/8eqzr/IJw0/9jY2P+8vLz/p6en/5+fn/+9vb3/vb29/729vf+tra3/vb29/7y8
        vP+8vLz/vLy8/6ysrP+7u7v/urq6/7m5uf+5ubn/uLi4/87Ozv9mZmZVAAAAAAAAAAAAAAAAAAAAABx8
        Ilgjr0D/IK8+/yCwP/8gsD//ILA//yCvPv8inzf/2dnZ/729vf+pqan/oKCg/8HBwf/BwcH/wcHB/6+v
        r//BwcH/wcHB/8HBwf/AwMD/r6+v/7+/v/+/v7//vr6+/729vf+5ubn/z8/P/2lpaVUAAAAAAAAAAAAA
        AAAAAAAAHHwlWCWzRP8hs0L/IrND/yK0Q/8is0P/IbNC/yOiOv/b29v/vr6+/6enp/+fn5//wsLC/8LC
        wv/CwsL/sLCw/8LCwv/BwcH/wcHB/8HBwf+vr6//wMDA/7+/v/+/v7//vr6+/7q6uv/R0dH/aWlpVQAA
        AAAAAAAAAAAAAAAAAAAcfyVYJrdI/yO2Rv8jt0f/I7dH/yO3R/8jtkb/JKU9/9zc3P+/v7//tLS0/6en
        p//d3d3/3t7e/97e3v/CwsL/3d3d/93d3f/c3Nz/3Nzc/8HBwf/a2tr/2dnZ/9jY2P/X19f/u7u7/9LS
        0v9sbGxVAAAAAAAAAAAAAAAAAAAAAByCKFgoukz/JbpK/yW7S/8lu0v/JbtL/yW6Sv8lqED/3t7e/8DA
        wP+np6f/n5+f/8HBwf/BwcH/wsLC/7CwsP/BwcH/wcHB/8DAwP/AwMD/r6+v/7+/v/++vr7/vb29/7y8
        vP+7u7v/09PT/2xsbFUAAAAAAAAAAAAAAAAAAAAAHIIoWCm+UP8mvk7/J79P/ye/T/8nv0//Jr5O/yar
        RP/f39//wcHB/6mpqf+goKD/xcXF/8XFxf/FxcX/srKy/8XFxf/FxcX/xMTE/8TExP+xsbH/w8PD/8LC
        wv/CwsL/wcHB/7y8vP/V1dX/b29vVQAAAAAAAAAAAAAAAAAAAAAchStYK8FT/yjCUv8owlP/KMNT/yjC
        U/8owlL/J65H/+Dg4P/CwsL/qKio/5+fn//Gxsb/xsbG/8bGxv+zs7P/xsbG/8XFxf/FxcX/xcXF/7Gx
        sf/Dw8P/w8PD/8LCwv/BwcH/vb29/9bW1v9vb29VAAAAAAAAAAAAAAAAAAAAAByIK1gtxVf/KcVW/yrG
        V/8qxlf/KsZX/ynFVv8osUn/4uLi/8TExP+0tLT/p6en/+Tk5P/k5OT/5OTk/8bGxv/j4+P/4+Pj/+Li
        4v/h4eH/xcXF/9/f3//e3t7/3d3d/9zc3P++vr7/19fX/3JyclUAAAAAAAAAAAAAAAAAAAAAH4suWC7I
        W/8ryVr/K8pb/yvKW/8rylv/K8la/yq0Tf/j4+P/xMTE/6enp/+fn5//xsbG/8bGxv/Gxsb/s7Oz/8bG
        xv/FxcX/xcXF/8TExP+xsbH/w8PD/8LCwv/BwcH/wMDA/7+/v//Y2Nj/cnJyVQAAAAAAAAAAAAAAAAAA
        AAAfiy5YMMxf/yzNXv8tzl//Lc5f/y3OX/8szV7/K7hQ/+Xl5f/FxcX/qamp/6CgoP/Jycn/ycnJ/8nJ
        yf+1tbX/ycnJ/8nJyf/IyMj/yMjI/7Ozs//Gxsb/xcXF/8TExP/ExMT/v7+//9nZ2f91dXVVAAAAAAAA
        AAAAAAAAAAAAAB+NMVgxz2P/LtBh/y7RY/8v0mP/LtFj/y7QYf8su1L/5ubm/8bGxv+oqKj/n5+f/8rK
        yv/Kysr/ysrK/7W1tf/Kysr/ycnJ/8nJyf/IyMj/tLS0/8fHx//Gxsb/xcXF/8TExP/AwMD/2tra/3V1
        dVUAAAAAAAAAAAAAAAAAAAAAH5AxWDPTZv8w1GX/MNVn/zDWZ/8w1Wf/MNRl/y2+Vf/n5+f/yMjI/7S0
        tP+oqKj/6urq/+rq6v/q6ur/y8vL/+np6f/p6en/6Ojo/+fn5//IyMj/5OTk/+Pj4//i4uL/4ODg/8HB
        wf/b29v/eHh4VQAAAAAAAAAAAAAAAAAAAAAfkDRYNNZq/zHYaf8y2Wv/Mtlr/zLZa/8x2Gn/LsFY/+jo
        6P/IyMj/p6en/5+fn//Kysr/y8vL/8vLy/+2trb/ysrK/8rKyv/Jycn/yMjI/7S0tP/Gxsb/xcXF/8TE
        xP/Dw8P/wcHB/9zc3P94eHhVAAAAAAAAAAAAAAAAAAAAAB+TNFg22m7/M9tt/zPdb/8z3W//M91v/zPb
        bf8vw1v/6urq/8nJyf+pqan/oKCg/83Nzf/Nzc3/zc3N/7e3t//Nzc3/zMzM/8zMzP/Ly8v/tbW1/8nJ
        yf/IyMj/x8fH/8bGxv/CwsL/3d3d/3t7e1UAAAAAAAAAAAAAAAAAAAAAH5Y3WDfdcf8033H/NeBy/zXh
        c/814HL/NN9x/zDGXv/r6+v/ysrK/6ioqP+fn5//zs7O/87Ozv/Ozs7/uLi4/83Nzf/Nzc3/zMzM/8vL
        y/+2trb/ycnJ/8jIyP/Hx8f/xsbG/8PDw//e3t7/e3t7VQAAAAAAAAAAAAAAAAAAAAAfmTdYOeB0/zbi
        dP825Hb/N+V3/zbkdv824nT/Mclh/+zs7P/Ly8v/tLS0/6ioqP/w8PD/8PDw//Dw8P/Pz8//7+/v/+7u
        7v/t7e3/7Ozs/8vLy//p6en/5+fn/+Xl5f/j4+P/w8PD/97e3v9+fn5VAAAAAAAAAAAAAAAAAAAAAB+Z
        OVg643j/N+Z4/zjoev846Hv/OOh6/zfmeP8yzGT/7e3t/8zMzP+oqKj/n5+f/8/Pz//Pz8//z8/P/7m5
        uf/Ozs7/zc3N/8zMzP/Ly8v/tbW1/8nJyf/IyMj/xsbG/8XFxf/Dw8P/39/f/35+flUAAAAAAAAAAAAA
        AAAAAAAAH5w5WDvme/846Xv/Oet+/zrsf/85637/OOl8/zPOZv/u7u7/zMzM/6mpqf+goKD/0dHR/9HR
        0f/R0dH/urq6/9DQ0P/Q0ND/z8/P/87Ozv+jtqn/j8ei/4/Gof+OxqH/jcWg/8TExP/f39//gYGBVQAA
        AAAAAAAAAAAAAAAAAAAfnzxYPOh9/zrsf/8774L/O/CD/zvvgv867H//NNFo/+7u7v/Nzc3/qKio/5+f
        n//R0dH/0tLS/9LS0v+6urr/0dHR/9DQ0P/Pz8//zs7O/4+0m/9Qv3b/UL92/1C/dv9Qv3b/xMTE/+Dg
        4P+BgYFVAAAAAAAAAAAAAAAAAAAAAB+fPFg96oD/Pe+D/0Pziv844nj/Lr1Y/zvvgv8002v/7+/v/87O
        zv+0tLT/qKio//X19f/39/f/9/f3/9PT0//09PT/8/Pz//Hx8f/v7+//zc3N/+vr6//p6en/5+fn/+Xl
        5f/ExMT/4ODg/4SEhFUAAAAAAAAAAAAAAAAAAAAAH6I/WD7sgf8y1mz/JbVN/z/3i/8w0Wf/PPGE/zXV
        bP/v7+//zc3N/6ioqP+fn5//qKio/6ioqP+oqKj/n5+f/6ioqP+oqKj/qKio/6ioqP+goKD/qKio/6en
        p/+np6f/p6en/8TExP/g4OD/hISEVQAAAAAAAAAAAAAAAAAAAAAipT9YP+2D/zLXbf843HT/P+eA/zrk
        e/888ob/NtZt/+/v7//Y2Nj/vLy8/7i4uP++vr7/v7+//7+/v/+5ubn/vb29/729vf+8vLz/u7u7/7a2
        tv+6urr/ubm5/7i4uP+4uLj/zs7O/+Dg4P+Hh4dVAAAAAAAAAAAAAAAAAAAAACKoQlhA7YT/NuB1/ym/
        Vv8pwFj/OOV6/z3zhv8312//7+/v/+/v7//x8fH/9PT0//b29v/39/f/9/f3//b29v/09PT/8vLy//Dw
        8P/u7u7/7Ozs/+rq6v/n5+f/5eXl/+Pj4//h4eH/4ODg/4eHh1UAAAAAAAAAAAAAAAAAAAAAH6dDQEvl
        hP9P85H/UfiW/1L6mP9R+Jb/T/OR/0bZef/x8fH/8fHx//Pz8//19fX/9vb2//f39//39/f/9vb2//X1
        9f/z8/P/8vLy//Dw8P/u7u7/7Ozs/+vr6//p6en/5+fn/+Xl5f/Y2Nj+iYmJPQAAAAAAAAAAAAAAAAAA
        AAAAAAAAH6dDQCKqQlgiqkJYIqpCWCKqQlgiqkJYIqpCWIqKilWKiopVioqKVYqKilWKiopVioqKVYqK
        ilWKiopVioqKVYqKilWKiopVioqKVYqKilWKiopVioqKVYqKilWKiopVioqKVYmJiT0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AAAAOAAAABwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPgAAAH//////////8=
</value>
  </data>
</root>